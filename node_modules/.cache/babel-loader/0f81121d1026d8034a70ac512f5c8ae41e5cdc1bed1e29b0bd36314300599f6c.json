{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\my-react-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTasksFromAPI } from \"../redux/taskslice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    list: tasks,\n    loading,\n    error\n  } = useSelector(state => state.tasks);\n  useEffect(() => {\n    dispatch(fetchTasksFromAPI()); // Fetch tasks using the Redux thunk\n  }, [dispatch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" -\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.completed ? \"Completed\" : \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"ZyE6ddbFygLWc8QA+Ag14P7FeCw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchTasksFromAPI","jsxDEV","_jsxDEV","Home","_s","dispatch","list","tasks","loading","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","task","title","completed","id","_c","$RefreshReg$"],"sources":["D:/task/my-react-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTasksFromAPI } from \"../redux/taskslice\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { list: tasks, loading, error } = useSelector((state) => state.tasks);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasksFromAPI()); // Fetch tasks using the Redux thunk\r\n  }, [dispatch]);\r\n\r\n  if (loading) {\r\n    return <p>Loading tasks...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>To-Do List</h1>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <span>{task.title}</span> -{\" \"}\r\n            <span>{task.completed ? \"Completed\" : \"Pending\"}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,IAAI,EAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACH,KAAK,CAAC;EAE3EV,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,IAAIG,OAAO,EAAE;IACX,oBAAON,OAAA;MAAAS,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAEA,IAAIN,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAS,QAAA,GAAG,SAAO,EAACF,KAAK;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBT,OAAA;MAAAS,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBb,OAAA;MAAAS,QAAA,EACGJ,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAOO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,MAAE,EAAC,GAAG,eAC/Bb,OAAA;UAAAS,QAAA,EAAOO,IAAI,CAACE,SAAS,GAAG,WAAW,GAAG;QAAS;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFhDG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CA7BID,IAAI;EAAA,QACSL,WAAW,EACYC,WAAW;AAAA;AAAAuB,EAAA,GAF/CnB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}