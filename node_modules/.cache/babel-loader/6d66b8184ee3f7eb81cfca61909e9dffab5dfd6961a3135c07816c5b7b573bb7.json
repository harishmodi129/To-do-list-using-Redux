{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchTasks } from \"../services/api\";\n\n// Thunk to fetch tasks\nexport const fetchTasksFromAPI = createAsyncThunk(\"tasks/fetchTasks\", async () => {\n  return await fetchTasks(); // Call the API service\n});\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    list: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    setTasks: (state, action) => {\n      state.list = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTasksFromAPI.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchTasksFromAPI.fulfilled, (state, action) => {\n      state.list = action.payload;\n      state.loading = false;\n    }).addCase(fetchTasksFromAPI.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  setTasks\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTasks","fetchTasksFromAPI","tasksSlice","name","initialState","list","loading","error","reducers","setTasks","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["D:/task/my-react-app/src/redux/taskslice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { fetchTasks } from \"../services/api\";\r\n\r\n// Thunk to fetch tasks\r\nexport const fetchTasksFromAPI = createAsyncThunk(\r\n  \"tasks/fetchTasks\",\r\n  async () => {\r\n    return await fetchTasks(); // Call the API service\r\n  }\r\n);\r\n\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    list: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setTasks: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTasksFromAPI.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchTasksFromAPI.fulfilled, (state, action) => {\r\n        state.list = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchTasksFromAPI.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setTasks } = tasksSlice.actions;\r\nexport default tasksSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C;AACA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC/C,kBAAkB,EAClB,YAAY;EACV,OAAO,MAAMC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7B,CACF,CAAC;AAED,MAAME,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC7B;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,iBAAiB,CAACe,OAAO,EAAGN,KAAK,IAAK;MAC7CA,KAAK,CAACJ,OAAO,GAAG,IAAI;MACpBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDQ,OAAO,CAACd,iBAAiB,CAACgB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACJ,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDS,OAAO,CAACd,iBAAiB,CAACiB,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACJ,KAAK,CAACY,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAS,CAAC,GAAGP,UAAU,CAACkB,OAAO;AAC9C,eAAelB,UAAU,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}