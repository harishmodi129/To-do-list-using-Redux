{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\my-react-app\\\\src\\\\pages\\\\EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { updateTask } from \"../redux/taskslice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTask = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // Access tasks from the Redux store\n  const tasks = useSelector(state => state.tasks.list);\n\n  // Find the task by converting the ID from the URL to a number\n  const task = tasks.find(task => task.id === Number(id));\n  const [completed, setCompleted] = useState((task === null || task === void 0 ? void 0 : task.completed) || false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!task) {\n      alert(\"Task not found\");\n      return;\n    }\n    const updatedTask = {\n      ...task,\n      completed\n    };\n    dispatch(updateTask(updatedTask));\n    navigate(\"/\");\n  };\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Task not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task-status\",\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"task-status\",\n        value: completed.toString(),\n        onChange: e => setCompleted(e.target.value === \"true\"),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTask, \"pva21tRL4lr2KVs63RJQZ4v8+KM=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n_c = EditTask;\nexport default EditTask;\nvar _c;\n$RefreshReg$(_c, \"EditTask\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","useParams","updateTask","jsxDEV","_jsxDEV","EditTask","_s","id","navigate","dispatch","tasks","state","list","task","find","Number","completed","setCompleted","handleSubmit","e","preventDefault","alert","updatedTask","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","value","toString","onChange","target","type","_c","$RefreshReg$"],"sources":["D:/task/my-react-app/src/pages/EditTask.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { updateTask } from \"../redux/taskslice\";\r\n\r\nconst EditTask = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // Access tasks from the Redux store\r\n  const tasks = useSelector((state) => state.tasks.list);\r\n\r\n  // Find the task by converting the ID from the URL to a number\r\n  const task = tasks.find((task) => task.id === Number(id));\r\n\r\n  const [completed, setCompleted] = useState(task?.completed || false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!task) {\r\n      alert(\"Task not found\");\r\n      return;\r\n    }\r\n\r\n    const updatedTask = { ...task, completed };\r\n    dispatch(updateTask(updatedTask));\r\n    navigate(\"/\");\r\n  };\r\n\r\n  if (!task) return <div>Task not found</div>;\r\n\r\n  return (\r\n    <div className=\"edit-task-container\">\r\n      <h1>Edit Task</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"task-status\">Status:</label>\r\n        <select\r\n          id=\"task-status\"\r\n          value={completed.toString()}\r\n          onChange={(e) => setCompleted(e.target.value === \"true\")}\r\n        >\r\n          <option value=\"true\">Completed</option>\r\n          <option value=\"false\">Incomplete</option>\r\n        </select>\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}