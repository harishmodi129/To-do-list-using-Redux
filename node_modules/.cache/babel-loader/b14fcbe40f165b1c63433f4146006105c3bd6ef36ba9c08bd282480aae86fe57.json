{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchTasks as fetchTasksAPI, addTask as addTaskAPI, editTask as editTaskAPI } from \"../services/api.js\";\n\n// Async Thunks using API functions\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\n  const tasks = await fetchTasksAPI(); // Fetch tasks from API\n  return tasks;\n});\nexport const addTask = createAsyncThunk(\"tasks/addTask\", async newTask => {\n  const task = await addTaskAPI(newTask); // Add task using API\n  return task;\n});\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", async ({\n  id,\n  updatedTask\n}) => {\n  const task = await editTaskAPI(id, updatedTask); // Edit task using API\n  return task;\n});\n\n// Redux Slice\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch Tasks\n    .addCase(fetchTasks.pending, state => {\n      state.loading = true;\n    }).addCase(fetchTasks.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = action.payload;\n    }).addCase(fetchTasks.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    })\n\n    // Add Task\n    .addCase(addTask.fulfilled, (state, action) => {\n      state.tasks.push(action.payload);\n    }).addCase(addTask.rejected, (state, action) => {\n      state.error = action.error.message;\n    })\n\n    // Update Task\n    .addCase(updateTask.fulfilled, (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      if (index !== -1) state.tasks[index] = action.payload;\n    }).addCase(updateTask.rejected, (state, action) => {\n      state.error = action.error.message;\n    });\n  }\n});\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchTasks","fetchTasksAPI","addTask","addTaskAPI","editTask","editTaskAPI","tasks","newTask","task","updateTask","id","updatedTask","tasksSlice","name","initialState","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","push","index","findIndex","reducer"],"sources":["D:/task/my-react-app/src/redux/taskslice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchTasks as fetchTasksAPI,\r\n  addTask as addTaskAPI,\r\n  editTask as editTaskAPI,\r\n} from \"../services/api.js\";\r\n\r\n// Async Thunks using API functions\r\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\r\n  const tasks = await fetchTasksAPI(); // Fetch tasks from API\r\n  return tasks;\r\n});\r\n\r\nexport const addTask = createAsyncThunk(\"tasks/addTask\", async (newTask) => {\r\n  const task = await addTaskAPI(newTask); // Add task using API\r\n  return task;\r\n});\r\n\r\nexport const updateTask = createAsyncThunk(\r\n  \"tasks/updateTask\",\r\n  async ({ id, updatedTask }) => {\r\n    const task = await editTaskAPI(id, updatedTask); // Edit task using API\r\n    return task;\r\n  }\r\n);\r\n\r\n// Redux Slice\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch Tasks\r\n      .addCase(fetchTasks.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchTasks.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.tasks = action.payload;\r\n      })\r\n      .addCase(fetchTasks.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // Add Task\r\n      .addCase(addTask.fulfilled, (state, action) => {\r\n        state.tasks.push(action.payload);\r\n      })\r\n      .addCase(addTask.rejected, (state, action) => {\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // Update Task\r\n      .addCase(updateTask.fulfilled, (state, action) => {\r\n        const index = state.tasks.findIndex(\r\n          (task) => task.id === action.payload.id\r\n        );\r\n        if (index !== -1) state.tasks[index] = action.payload;\r\n      })\r\n      .addCase(updateTask.rejected, (state, action) => {\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default tasksSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}